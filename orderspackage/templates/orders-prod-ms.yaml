# APP DEPLOYMENT

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: {{ .Release.Name }}-{{ .Values.ordersProd.name }}
  name: {{ .Release.Name }}-{{ .Values.ordersProd.name }}
spec:
  replicas: {{ .Values.ordersProd.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-{{ .Values.ordersProd.name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-{{ .Values.ordersProd.name }}
        version: {{ .Values.ordersProd.version }}
    spec:
      containers:
      - args:
        - npm
        - start
        env:
        - name: APP_PORT
          value: "{{ .Values.ordersProd.port }}"
        - name: KAFKA_BROKER
          value: {{ .Values.env.kafkaBroker }}
        - name: KAFKA_REGISTRY
          value: {{ .Values.env.kafkaRegistry }}
        - name: KAFKA_ORDER_TOPIC
          value: {{ .Values.env.kafkaOrderTopic }}
        image: {{ .Values.ordersProd.image.repo }}:{{ .Values.ordersProd.image.tag }}
        name: {{ .Release.Name }}-{{ .Values.ordersProd.name }}
        ports:
        - containerPort: {{ .Values.ordersProd.port }}
      restartPolicy: Always

---

# APP SERVICE

apiVersion: v1
kind: Service
metadata:
  labels:
    app: {{ .Release.Name }}-{{ .Values.ordersProd.name }}
  name: {{ .Release.Name }}-{{ .Values.ordersProd.name }}
spec:
  ports:
  - name: http
    port: {{ .Values.ordersProd.port }}
  selector:
    app: {{ .Release.Name }}-{{ .Values.ordersProd.name }}
  # ports:
  # - port: {{ .Values.ordersProd.port }}
  #   protocol: TCP
  #   targetPort: {{ .Values.ordersProd.port }}
  # selector:
  #   app: {{ .Release.Name }}-{{ .Values.ordersProd.name }}
  # type: NodePort
