version: '2'
services:
  orders-ui:
      #Image
      image: luisw19/orders-ui:4.1.1
      #Uncomment "build" if you wish to build from source code, otherwise it'll pull from registry
      build: ./ui
      environment:
        API_HOST: 'http://129.213.126.223:8011'
        API_KEY: '351801a3-0c02-41c1-b261-d0e5aaa4a0e6'
      ports:
        - "8080:8080"
      command: bash container-entrypoint.sh

  product-sub-ms:
      #Image
      image: luisw19/product-sub-ms:4.0.0
      #Uncomment "build" if you wish to build from source code, otherwise it'll pull from registry
      build: ./product-subscriber-ms
      environment:
        KAFKA_BROKER: '130.61.35.61:9092'
        KAFKA_REGISTRY: 'http://130.61.35.61:8081'
        KAFKA_SHOPPINGCART_TOPIC: 'soaring-add-to-shopping-cart'
        ORDERSAPI_HOST: 'orders-ms'
        ORDERSAPI_PORT: 3000
      command: node product-subscriber-ms.js
      links:
        - orders-ms

  orders-ms:
      #Image
      image: luisw19/orders-ms:4.0.1
      #Uncomment "build" if you wish to build from source code, otherwise it'll pull from registry
      build: ./orders-ms
      environment:
        APP_PORT: 3000
        EVENTAPI_HOST: 'orders-prod-ms'
        EVENTAPI_PORT: 4000
        MONGODB_NAME: 'orders-mongo-db'
        MONGODB_PORT: 27017
      depends_on:
        - orders-mongo-db
      ports:
        - "3000:3000"
      command: npm start
      links:
        - orders-mongo-db
        - orders-prod-ms

  orders-prod-ms:
      #Image
      image: luisw19/orders-prod-ms:4.0.0
      #Uncomment "build" if you wish to build from source code, otherwise it'll pull from registry
      build: ./orders-producer-ms
      environment:
        APP_PORT: 4000
        KAFKA_BROKER: '130.61.35.61:9092'
        KAFKA_REGISTRY: 'http://130.61.35.61:8081'
        KAFKA_ORDER_TOPIC: 'soaring-ordercreated'
      ports:
            - "4000:4000"
      command: npm start

  orders-mongo-db:
      image: mongo
